import type { Config, Node, Schema, RenderableTreeNode, RenderableTreeNodes } from './types';
declare type AttributesSchema = Schema['attributes'];
export declare const globalAttributes: AttributesSchema;
export interface Transformer {
    findSchema(node: Node, config: Config): Schema | undefined;
    node(node: Node, config: Config): RenderableTreeNodes;
    attributes(node: Node, config: Config): Record<string, any>;
    children(node: Node, config: Config): RenderableTreeNode[];
}
declare const _default: Transformer;
export default _default;
//# sourceMappingURL=transformer.d.ts.map